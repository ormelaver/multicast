# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: multicast # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs6.10

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1



functions:
  postEvent:
    handler: handler.postEvent
    events:
     - http:
         path: event
         method: post
  getEvent: 
    handler: handler.getEvent 
    events: 
    - http: 
         integration: lambda
         path: event/{id}
         method: get 
         request:
          template:
              application/json: >
                {
                  "id" : "$input.params('id')"
                } 
  deleteEvent:
    handler: handler.deleteEvent
    events:
     - http:
         integration: lambda
         path: /event/{id}
         method: delete
         request:
          template:
              application/json: >
                {
                  "id" : "$input.params('id')"
                } 
  putEvent:
    handler: handler.putEvent
    events:
     - http:
         integration: lambda
         path: /event/{id}
         method: put
         request: 
          template:
              application/json: >
                {
                  "id" : "$input.params('id')",
                  "payload": $input.body
                } 
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
   # events:
   #   - http:
   #       path: users/create
   #       method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
